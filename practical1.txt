a)

b)

c)
    Execution of the BIOS code
    Execution of the boot loader code (alternatively called initial program loader, IPL)
    Execution of /init program under the Linux kernel with the expanded initramfs image in memory as the temporary root file system
    Execution of /sbin/init under the Linux kernel while switching the root file system to the hard disk

d)

e)

f)

G) ???


h)

BOOT SEQUENCE: bootchart

TARGET: current or desired run state

    systemctl list-units --type target #list all targets

        UNIT                   LOAD   ACTIVE SUB    DESCRIPTION
        basic.target           loaded active active Basic System
        cryptsetup.target      loaded active active Local Encrypted Volumes
        getty.target           loaded active active Login Prompts
        graphical.target       loaded active active Graphical Interface
        local-fs-pre.target    loaded active active Local File Systems (Pre)
        local-fs.target        loaded active active Local File Systems
        multi-user.target      loaded active active Multi-User System
        network.target         loaded active active Network
        nss-user-lookup.target loaded active active User and Group Name Lookups
        paths.target           loaded active active Paths
        remote-fs.target       loaded active active Remote File Systems
        slices.target          loaded active active Slices
        sockets.target         loaded active active Sockets
        swap.target            loaded active active Swap
        sysinit.target         loaded active active System Initialization
        time-set.target        loaded active active System Time Set
        time-sync.target       loaded active active System Time Synchronized
        timers.target          loaded active active Timers

        LOAD   = Reflects whether the unit definition was properly loaded.
        ACTIVE = The high-level unit activation state, i.e. generalization of SUB.
        SUB    = The low-level unit activation state, values depend on unit type.
        18 loaded units listed. Pass --all to see loaded but inactive units, too.
        To show all installed unit files use 'systemctl list-unit-files'.

    systemctl get-default   # show current target
        graphical.targe     # told target
    
    systemctl set-default [target]  # change target
        multi-user.target   # selected target

        Created symlink /etc/systemd/system/default.target → /lib/systemd/system/multi-user.target.


BOOT TIME: after changing the boot target, each reboot takes +-12s:

    systemd-analyze # give boot time
    
    Startup finished in 3.673s (kernel) + 8.594s (userspace) = 12.268s 
    multi-user.target reached after 8.548s in userspace


SERVICES: an application (or set of applications) that runs in the background waiting to be used, or carrying out essential tasks

    systemctl list-units --type=service     # show all services
    
    systemctl list-dependencies             # show general service dependencies

        default.target
        ● ├─anacron.service
        ● ├─avahi-daemon.service
        ● ├─console-setup.service
        ● ├─cron.service
        ● ├─cups-browsed.service
        ● ├─cups.path
        ● ├─dbus.service
        ● ├─e2scrub_reap.service
        ● ├─ModemManager.service
        ● ├─networking.service
        ● ├─NetworkManager.service
        ● ├─open-vm-tools.service
        ● ├─plymouth-quit-wait.service
        ● ├─plymouth-quit.service
        ● ├─rsyslog.service
        ● ├─run-vmblock\x2dfuse.mount
        ● ├─ssa.service
        ● ├─ssh.service
        ● ├─systemd-ask-password-wall.path
        ● ├─systemd-logind.service
        ● ├─systemd-update-utmp-runlevel.service
        ● ├─systemd-user-sessions.service
        ● ├─tpm2-abrmd.service
        ● ├─unattended-upgrades.service
        ● ├─wpa_supplicant.service
        ● ├─basic.target
        ● │ ├─-.mount
        ● │ ├─tmp.mount
        ● │ ├─paths.target
        ● │ ├─slices.target
        ● │ │ ├─-.slice
        ● │ │ └─system.slice
        ● │ ├─sockets.target
        ● │ │ ├─avahi-daemon.socket
        ● │ │ ├─cups.socket
        ● │ │ ├─dbus.socket
        ● │ │ ├─systemd-initctl.socket
        ● │ │ ├─systemd-journald-audit.socket
        ● │ │ ├─systemd-journald-dev-log.socket
        ● │ │ ├─systemd-journald.socket
        ● │ │ ├─systemd-udevd-control.socket
        ● │ │ └─systemd-udevd-kernel.socket
        ● │ ├─sysinit.target
        ● │ │ ├─apparmor.service
        ● │ │ ├─dev-hugepages.mount
        ● │ │ ├─dev-mqueue.mount
        ● │ │ ├─keyboard-setup.service
        ● │ │ ├─kmod-static-nodes.service
        ● │ │ ├─plymouth-read-write.service
        ● │ │ ├─plymouth-start.service
        ● │ │ ├─proc-sys-fs-binfmt_misc.automount
        ● │ │ ├─sys-fs-fuse-connections.mount
        ● │ │ ├─sys-kernel-config.mount
        ● │ │ ├─sys-kernel-debug.mount
        ● │ │ ├─sys-kernel-tracing.mount
        ● │ │ ├─systemd-ask-password-console.path
        ● │ │ ├─systemd-binfmt.service
        ● │ │ ├─systemd-boot-system-token.service
        ● │ │ ├─systemd-hwdb-update.service
        ● │ │ ├─systemd-journal-flush.service
        ● │ │ ├─systemd-journald.service
        ● │ │ ├─systemd-machine-id-commit.service
        ● │ │ ├─systemd-modules-load.service
        ● │ │ ├─systemd-pstore.service
        ● │ │ ├─systemd-random-seed.service
        ● │ │ ├─systemd-sysctl.service
        ● │ │ ├─systemd-sysusers.service
        ● │ │ ├─systemd-timesyncd.service
        ● │ │ ├─systemd-tmpfiles-setup-dev.service
        ● │ │ ├─systemd-tmpfiles-setup.service
        ● │ │ ├─systemd-udev-trigger.service
        ● │ │ ├─systemd-udevd.service
        ● │ │ ├─systemd-update-utmp.service
        ● │ │ ├─cryptsetup.target
        ● │ │ ├─local-fs.target
        ● │ │ │ ├─-.mount
        ● │ │ │ ├─systemd-fsck-root.service
        ● │ │ │ └─systemd-remount-fs.service
        ● │ │ └─swap.target
        ● │ │   └─dev-sda5.swap
        ● │ └─timers.target
        ● │   ├─anacron.timer
        ● │   ├─apt-daily-upgrade.timer
        ● │   ├─apt-daily.timer
        ● │   ├─e2scrub_all.timer
        ● │   ├─fwupd-refresh.timer
        ● │   ├─logrotate.timer
        ● │   ├─man-db.timer
        ● │   └─systemd-tmpfiles-clean.timer
        ● ├─getty.target
        ● │ ├─getty-static.service
        ● │ └─getty@tty1.service
        ● └─remote-fs.target

BOOT TIME II

     systemd-analyze blame  # shows a detailed boot time summary

bluetooth.service -> bluetooth not needed
        no reverse dependencies

    ModemManager.service -> mobile broadband not needed
    ● └─multi-user.target
    ●   └─graphical.target

    avahi-daemon.service -> finds net resources automatically
    ● ├─cups-browsed.service
    ● └─multi-user.target
    ●   └─graphical.target
 
    display-manager.service -> display manager
    ● └─graphical.target

    NetworkManager.service -> dynamic net 
    ● ├─NetworkManager-wait-online.service
    ● └─multi-user.target
    ●   └─graphical.target

    wpa_supplicant.service -> wireless connection
    ● └─multi-user.target
    ●   └─graphical.target

    apparmor.service
        no reverse dependencies (all protected apps)

    cups.service -> no need for printing
    ● └─cups-browsed.service

BOOT TIME III
    2.514s dev-sda1.device
2.144s ifupdown-pre.service
2.062s apparmor.service
2.020s systemd-udev-settle.service
1.896s NetworkManager.service
1.886s networking.service
1.874s polkit.service
1.692s avahi-daemon.service
1.629s wpa_supplicant.service
1.623s systemd-logind.service
1.299s systemd-journal-flush.service
 901ms systemd-random-seed.service
 756ms systemd-journald.service
 634ms systemd-udev-trigger.service
 530ms user@1000.service
 509ms systemd-udevd.service
 454ms keyboard-setup.service
 426ms udisks2.service
 353ms ModemManager.service
 351ms ssh.service
 272ms e2scrub_reap.service
 267ms systemd-timesyncd.service
 241ms cups.service
 220ms systemd-modules-load.service
 182ms systemd-tmpfiles-setup.service
 148ms plymouth-start.service
 117ms upower.service
 104ms rsyslog.service
  98ms systemd-sysusers.service
  91ms modprobe@fuse.service
  90ms systemd-tmpfiles-setup-dev.service
  81ms systemd-sysctl.service
  79ms dev-mqueue.mount
  78ms dev-hugepages.mount
  78ms sys-kernel-debug.mount
  77ms sys-kernel-tracing.mount
  75ms systemd-update-utmp.service
  73ms run-vmblock\x2dfuse.mount
  64ms systemd-remount-fs.service
  55ms systemd-update-utmp-runlevel.service
  50ms plymouth-quit-wait.service
  46ms modprobe@configfs.service
  46ms kmod-static-nodes.service
  45ms modprobe@drm.service
  44ms dev-sda5.swap
  43ms plymouth-read-write.service
  42ms console-setup.service
  40ms plymouth-quit.service
  29ms systemd-user-sessions.service
  28ms sys-kernel-config.mount
  16ms user-runtime-dir@1000.service
  15ms rtkit-daemon.service
  12ms open-vm-tools.service
  12ms sys-fs-fuse-connections.mount


BOOT TIME IV
    flush takes an increasingly amount of time with each reboot
    given that not all of it is needed, 

systemd-timesyncd -> daemon that synchronizes time through the web


ROUTING TABLE:
    route

    Kernel IP routing table
    Destination     Gateway         Genmask         Flags Metric Ref    Use Iface
    default         _gateway        0.0.0.0         UG    0      0        0 ens33
    10.11.48.0      0.0.0.0         255.255.254.0   U     0      0        0 ens33
    10.11.50.0      0.0.0.0         255.255.254.0   U     0      0        0 ens34
    link-local      0.0.0.0         255.255.0.0     U     1000   0        0 ens33

    ip route add 172.10.1.0/24 via 10.0.0.100 dev eth0 # add a temporary route

RESOURCES: top

i)?

j)
    netstat
        -a
        -n (ports & dics #)
        -r root table
        -p (protocols)
        -u (udp)
        -t (tcp)
        -o (timers)

k)
        ps : procesos en ejecucion
        top: % y tiempo cpu, uso memoria, procesos e hilos
        vmstat: memoria virtual
        free: consumo cm
        netstat -c: info * sec

    /etc/hosts.deny || host allow

l)  politica filtrado paranoid

    tcp wrapper es un sistema de red ACL que se usa para filtrar el acceso de protocolos de internet. la diferencia entre un tcp wrapper y un firewall es capa de aplicacion y el firewall en capa 3

m)  syslog: Fichero de configuracion situado en /etc/rsyslog.conf de donde se mandan los mensajes de
                log dependiendo del servicio. A la izquierda del punto esta el tipo de servicio (mail, auth...) y a la
                derecha la gravedad (.debug, .info, .notice ...). Por orden de gravedad de menor a mayor seria: debug <
                info < notice < warn < error < crit < alert < emerg.    

            logger -p user.info "Probando rsyslog" (mandamos con prioridad.info)

            cat /var/log/syslog
            cat /var/log/user.log
            cat /var/log/messages

n) a toda direccion IPv4 le corresponde un segmento /48 de direcciones IPv6 con el siguiente
formato: 2002:XXXX:YYYY:/48 donde XXXX:YYYY son los 32 bits de la direcci\u00f3n IPv4 en
formato hexadecimal


-------------------------------------------------------------------------------

a)

b)

c)

d)
